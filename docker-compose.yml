services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    env_file:
      - ./frontend/.env
    ports:
      - "8501:8501"
    volumes:
      - ./frontend:/app
    depends_on:
      backend-api:
        condition: service_healthy
      backend-ml:
        condition: service_healthy

  backend-api:
    build:
      context: ./backend
      dockerfile: api/Dockerfile
    env_file:
      - ./backend/.env
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./backend/uploads:/app/uploads
      - ./backend/saved_models:/app/saved_models
    ports:
      - "8000:8000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    command: >
      sh -c "
      alembic upgrade head &&
      uvicorn app.main:app --host 0.0.0.0 --port 8000
      "

  backend-ml:
    build:
      context: ./backend/ml
      dockerfile: Dockerfile
    ports:
      - "8001:8000"
    volumes:
      - ./backend/uploads:/app/uploads
      - ./backend/saved_models:/app/saved_models
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    command: >
      sh -c "
      uvicorn app.main:app --host 0.0.0.0 --port 8000
      "

  db:
    image: postgres:13
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${DB_PASSWORD:-password}
      POSTGRES_DB: data_db
    volumes:
      - db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  db-data:
