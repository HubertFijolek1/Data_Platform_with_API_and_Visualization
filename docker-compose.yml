services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    env_file:
      - ./frontend/.env
    ports:
      - "8501:8501"
    volumes:
      - ./frontend:/app
    depends_on:
      - backend-api
      - backend-ml

  backend-api:
    build:
      context: ./backend
      dockerfile: api/Dockerfile
    env_file:
      - ./backend/.env
    depends_on:
      - db
      - backend-ml
    volumes:
      - ./backend/uploads:/app/uploads
      - ./backend/saved_models:/app/saved_models

    ports:
      - "8000:8000"
    command: >
      sh -c "
      echo 'Listing directory structure...' &&
      ls -laR /app &&
      pytest /app/tests &&
      uvicorn app.main:app --host 0.0.0.0 --port 8000
      "

  backend-ml:
    build:
      context: ./backend/ml
      dockerfile: Dockerfile
    ports:
      - "8001:8000"
    volumes:
      - ./backend/uploads:/app/uploads
      - ./backend/saved_models:/app/saved_models

    depends_on:
      - db
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 5
    command: >
      sh -c "
      echo 'Listing directory structure...' &&
      ls -laR /app &&
      pytest /app/tests &&
      uvicorn app.main:app --host 0.0.0.0 --port 8000
      "

  db:
    image: postgres:13
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: data_db
    volumes:
      - db-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 5

volumes:
  db-data:
