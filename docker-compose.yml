name: Data Analysis Platform CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install docker-compose
      run: |
        sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        sudo chmod +x /usr/local/bin/docker-compose

    - name: Install dependencies (backend)
      working-directory: ./backend
      run: |
        python -m venv .venv
        source .venv/bin/activate
        pip install --upgrade pip
        pip install -r requirements.txt

    - name: Install dependencies (frontend)
      working-directory: ./frontend
      run: |
        python -m venv .venv
        source .venv/bin/activate
        pip install --upgrade pip
        pip install -r requirements.txt

    - name: Build the Docker image
      run: |
        echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> backend/.env
        echo "TEST_DATABASE_URL=${{ secrets.TEST_DATABASE_URL }}" >> backend/.env
        echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> backend/.env
        echo "ALGORITHM=${{ secrets.ALGORITHM }}" >> backend/.env
        echo "ACCESS_TOKEN_EXPIRE_MINUTES=${{ secrets.ACCESS_TOKEN_EXPIRE_MINUTES }}" >> backend/.env
        echo "BACKEND_CORS_ORIGINS=${{ secrets.BACKEND_CORS_ORIGINS }}" >> backend/.env
        docker-compose build

    - name: Run tests (backend)
      run: docker-compose run backend pytest

    - name: Lint with flake8 (backend)
      run: docker-compose run backend flake8 .

    - name: Run Streamlit app (frontend)
      run: docker-compose up -d frontend

    - name: Check Streamlit app availability
      run: |
        apt-get update -y
        apt-get install -y wait-for-it
        wait-for-it http://localhost:8501 -t 60 -- echo "Streamlit app is available"
